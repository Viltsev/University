"""
Комбинаторная теория полугрупп

1. Рассмотреть понятия полугруппы разработать алгоритм теста Лайта проверки ассоциативности бинарной операции [4],[5].
Вход: таблица Кэли бинарной операции на множестве 􏰀.
Выход: операция ассоциативна или неассоциативна.

2. Рассмотреть понятия подполугруппы и порождающего множества [4],[5].
Разработать алгоритм построения подполугрупп по по таблице Кэли. Вход: полугруппа S с таблицей Кэли и подмножество X ⊂ S.
Выход: подполугруппа 〈X〉 ⊂ S.

3. Разработать алгоритм построения полугруппы бинарных отношений по заданному порождающему множеству [4],[5],[9] .
Вход: конечное множество X бинарных отношений (булевых матриц).
Выход: полугруппа 〈X〉.
"""

"""
FUNCTIONS
"""
import math
import numpy as np
import sys

# функция проверки операции на ассоциативность
def check_assocoativity(cayleyTable):
    n = len(cayleyTable)
    for i in range(n):
        for j in range(n):
            for k in range(n):
                if cayleyTable[cayleyTable[i][j]][k] != cayleyTable[i][cayleyTable[j][k]]:
                    return "Операция неассоциативна"
    return "Операция ассоциативна"


"""
MAIN PROGRAM
"""
print("Лабораторная работа №3")

# 1. Алгоритм теста Лайта проверки ассоциативности бинарной операции
print("1. Алгоритм теста Лайта проверки ассоциативности бинарной операции")
n = int(input("Введите размер таблицы Кэли"))
matrix = []

print("Введите таблицу Кэли: ")
matrix = [list(map(int, input(f"Enter row {i+1}: ").split())) for i in range(n)]

"""
ВЫВОД ТАБЛИЦЫ КЭЛИ
"""
print("Таблица Кэли: ")
for i in range(n):
    for j in range(n):
        print(matrix[i][j], end=" ")
    print()

assocoativityCheck = check_assocoativity(matrix)
print(assocoativityCheck)


